/*
 * This file is generated by jOOQ.
*/
package swust.PdfVerify.pojo.po.mysql;


import javax.annotation.Generated;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;

import swust.PdfVerify.pojo.po.mysql.tables.Doc;
import swust.PdfVerify.pojo.po.mysql.tables.records.DocRecord;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>document</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<DocRecord, Long> IDENTITY_DOC = Identities0.IDENTITY_DOC;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<DocRecord> KEY_DOC_PRIMARY = UniqueKeys0.KEY_DOC_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<DocRecord, Long> IDENTITY_DOC = Internal.createIdentity(Doc.DOC, Doc.DOC.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<DocRecord> KEY_DOC_PRIMARY = Internal.createUniqueKey(Doc.DOC, "KEY_doc_PRIMARY", Doc.DOC.ID);
    }
}
