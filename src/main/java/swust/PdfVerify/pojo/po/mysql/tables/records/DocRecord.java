/*
 * This file is generated by jOOQ.
*/
package swust.PdfVerify.pojo.po.mysql.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import swust.PdfVerify.pojo.po.mysql.tables.Doc;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DocRecord extends UpdatableRecordImpl<DocRecord> implements Record4<Long, String, Long, String> {

    private static final long serialVersionUID = -1394859237;

    /**
     * Setter for <code>document.doc.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>document.doc.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>document.doc.doc_web_path</code>.
     */
    public void setDocWebPath(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>document.doc.doc_web_path</code>.
     */
    public String getDocWebPath() {
        return (String) get(1);
    }

    /**
     * Setter for <code>document.doc.doc_id</code>.
     */
    public void setDocId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>document.doc.doc_id</code>.
     */
    public Long getDocId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>document.doc.doc_local_path</code>.
     */
    public void setDocLocalPath(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>document.doc.doc_local_path</code>.
     */
    public String getDocLocalPath() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Long, String, Long, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Long, String, Long, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Doc.DOC.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Doc.DOC.DOC_WEB_PATH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field3() {
        return Doc.DOC.DOC_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Doc.DOC.DOC_LOCAL_PATH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getDocWebPath();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component3() {
        return getDocId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getDocLocalPath();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getDocWebPath();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value3() {
        return getDocId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getDocLocalPath();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DocRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DocRecord value2(String value) {
        setDocWebPath(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DocRecord value3(Long value) {
        setDocId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DocRecord value4(String value) {
        setDocLocalPath(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DocRecord values(Long value1, String value2, Long value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DocRecord
     */
    public DocRecord() {
        super(Doc.DOC);
    }

    /**
     * Create a detached, initialised DocRecord
     */
    public DocRecord(Long id, String docWebPath, Long docId, String docLocalPath) {
        super(Doc.DOC);

        set(0, id);
        set(1, docWebPath);
        set(2, docId);
        set(3, docLocalPath);
    }
}
